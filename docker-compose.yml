services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres2:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      PGDATA: /var/lib/postgresql/data/pgdata

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    restart: always
    ports:
      - 5540:5540
    volumes:
      - ./data/redisinsight:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    # networks:
    #   - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_IN_SYNC_REPLICAS: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    # networks:
    #   - kafka-network

  user-service:
    build:
      context: .
      dockerfile: Dockerfile.user
    ports:
      - 3000:3000
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G

  task-service:
    build:
      context: .
      dockerfile: Dockerfile.task
    ports:
      - 3001:3001
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile.notification
    ports:
      - 3002:3002
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G



# networks:
#   default:
#     external:
#       name: my_shared_network

# networks:
#   my_shared_network:
#     external: true
#   kafka-network:
#     driver: bridge